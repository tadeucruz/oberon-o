/*
 * Generated by classgen, version 1.3
 * 24/09/10 22:45
 */
package controle;

import type.PrimaryType;
import type.Type;

public abstract class Decla {

	public static Type INT = new PrimaryType("int");
	public static Type BOOL = new PrimaryType("bool");
	public static Type VOID = new PrimaryType("void");
	public static Type ERROR = new PrimaryType("error");
	public static Type INTARRAY = new type.ArrayType(INT, null);
	public static Type BOOLARRAY = new type.ArrayType(BOOL, null);
	public Type type = VOID;
	public int width;
	public int offset;
	public String next = "FALL";
	public static int contDesloca;
	public static int contProc;
	public static String globalOuLocal = "global";

	public Decla getLeft() {
		throw new ClassCastException("tried to call abstract method");
	}

	public void setLeft(Decla left) {
		throw new ClassCastException("tried to call abstract method");
	}

	public Decla getRight() {
		throw new ClassCastException("tried to call abstract method");
	}

	public void setRight(Decla right) {
		throw new ClassCastException("tried to call abstract method");
	}

	public int getId() {
		throw new ClassCastException("tried to call abstract method");
	}

	public void setId(int id) {
		throw new ClassCastException("tried to call abstract method");
	}

	public Exp getExp() {
		throw new ClassCastException("tried to call abstract method");
	}

	public void setExp(Exp exp) {
		throw new ClassCastException("tried to call abstract method");
	}

	public int getTipo() {
		throw new ClassCastException("tried to call abstract method");
	}

	public void setTipo(int tipo) {
		throw new ClassCastException("tried to call abstract method");
	}

	public Decla getDecla() {
		throw new ClassCastException("tried to call abstract method");
	}

	public void setDecla(Decla decla) {
		throw new ClassCastException("tried to call abstract method");
	}

	public Decla getDecla2() {
		throw new ClassCastException("tried to call abstract method");
	}

	public void setDecla2(Decla decla2) {
		throw new ClassCastException("tried to call abstract method");
	}

	public Com getCom() {
		throw new ClassCastException("tried to call abstract method");
	}

	public void setCom(Com com) {
		throw new ClassCastException("tried to call abstract method");
	}

	public String getVartype() {
		throw new ClassCastException("tried to call abstract method");
	}

	public void setVartype(String vartype) {
		throw new ClassCastException("tried to call abstract method");
	}

	public String toString() {
		return toString("");
	}

	public abstract String toString(String tab);

	public abstract void type_check();

	protected void check_const() {

	}

	public void gen() {
		System.out.println("Implementar: " + this.getClass());
	}

}
