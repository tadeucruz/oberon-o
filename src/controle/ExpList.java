/*
 * Generated by classgen, version 1.3
 * 24/09/10 22:45
 */
package controle;

import java.util.ArrayList;

import type.Type;

public class ExpList extends Exp {

	private Exp exp;
	private Exp exp2;
	private ArrayList<Type> controle = new ArrayList<Type>();

	public ExpList(Exp exp, Exp exp2) {
		this.exp = exp;
		this.exp2 = exp2;
	}

	public ArrayList<Type> getControle() {
		return controle;
	}

	public Exp getExp() {
		return exp;
	}

	public void setExp(Exp exp) {
		this.exp = exp;
	}

	public Exp getExp2() {
		return exp2;
	}

	public void setExp2(Exp exp2) {
		this.exp2 = exp2;
	}

	public String toString(String tab) {
		StringBuffer buffer = new StringBuffer();
		buffer.append(tab);
		buffer.append("ExpList(\n");
		if (exp != null)
			buffer.append(exp.toString("  " + tab));
		else
			buffer.append(tab + "  null");
		buffer.append("\n");
		if (exp2 != null)
			buffer.append(exp2.toString("  " + tab));
		else
			buffer.append(tab + "  null");
		buffer.append("\n");
		buffer.append(tab);
		buffer.append(") [ExpList]");
		return buffer.toString();
	}

	@Override
	public StringBuffer to_postfix() {
		StringBuffer volta = new StringBuffer();
		volta.append(exp.to_postfix());
		volta.append(exp2.to_postfix());
		return volta;
	}

	@Override
	public Type type_check() {
		if ((exp instanceof ExpId)) {
			controle.add(exp.type_check());
		} else {
			exp.type_check();
			controle = ((ExpList) exp).getControle();
		}
		if ((exp2 instanceof ExpId)) {
			controle.add(exp2.type_check());
		} else {
			exp2.type_check();
			controle = ((ExpList) exp2).getControle();
		}
		return ERROR;
	}

	@Override
	public boolean check_const() {
		return (exp.check_const() && exp2.check_const());
	}

	@Override
	public void gen() {
		exp.gen();
		exp2.gen();
	}

	public boolean equals(Object obj) {
		return this.toString().equals(obj.toString());
	}

}
