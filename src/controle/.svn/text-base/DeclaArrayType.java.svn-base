/*
 * Generated by classgen, version 1.3
 * 24/09/10 22:45
 */
package controle;

import principal.goo;

public class DeclaArrayType extends Decla {

	private Exp exp;
	private Decla decla;

	public DeclaArrayType(Exp exp, Decla decla) {
		this.exp = exp;
		this.decla = decla;
	}

	public Exp getExp() {
		return exp;
	}

	public void setExp(Exp exp) {
		this.exp = exp;
	}

	public Decla getDecla() {
		return decla;
	}

	public void setDecla(Decla decla) {
		this.decla = decla;
	}

	public String toString(String tab) {
		StringBuffer buffer = new StringBuffer();
		buffer.append(tab);
		buffer.append("DeclaArrayType(\n");
		if (exp != null)
			buffer.append(exp.toString("  " + tab));
		else
			buffer.append(tab + "  null");
		buffer.append("\n");
		if (decla != null)
			buffer.append(decla.toString("  " + tab));
		else
			buffer.append(tab + "  null");
		buffer.append("\n");
		buffer.append(tab);
		buffer.append(") [DeclaArrayType]");
		return buffer.toString();
	}

	@Override
	public void type_check() {
		if (exp != null) {
			exp.type_check();
			if (exp.check_const()) {
				if (exp.type() == INT) {
					if (exp.cvalue > 0) {
						// return true;
					} else {
						System.out.println("array size must be positive");
						goo.podeContinuar = false;
					}
				} else {
					System.out.println("array size must be integer");
					goo.podeContinuar = false;
				}
			} else {
				System.out.println("array size must be constant");
				goo.podeContinuar = false;
			}
		}
		if (decla != null)
			decla.type_check();
	}

	@Override
	public void gen() {
		System.out.println();
		if (exp != null)
			exp.gen();
		if (decla != null)
			decla.gen();
		// this.width = exp.cvalue * decla.width;
	}

}
