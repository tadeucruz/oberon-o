/*
 * Generated by classgen, version 1.3
 * 24/09/10 22:45
 */
package controle;

import principal.goo;
import type.Type;
import SymbolTable.Info;
import SymbolTable.SymbolTable;

public class ExpAtrib extends Exp {

	private int id;
	private Exp exp;

	public ExpAtrib(int id, Exp exp) {
		this.id = id;
		this.exp = exp;
	}

	public int getId() {
		return id;
	}

	public void setId(int id) {
		this.id = id;
	}

	public Exp getExp() {
		return exp;
	}

	public void setExp(Exp exp) {
		this.exp = exp;
	}

	public String toString(String tab) {
		StringBuffer buffer = new StringBuffer();
		buffer.append(tab);
		buffer.append("ExpAtrib(\n");
		buffer.append("  " + tab + id);
		buffer.append("\n");
		if (exp != null)
			buffer.append(exp.toString("  " + tab));
		else
			buffer.append(tab + "  null");
		buffer.append("\n");
		buffer.append(tab);
		buffer.append(") [ExpAtrib]");
		return buffer.toString();
	}

	@Override
	public StringBuffer to_postfix() {
		StringBuffer volta = new StringBuffer();
		volta.append(exp.to_postfix());
		return volta;
	}

	@Override
	public Type type_check() {
		_type = ERROR;
		SymbolTable ts = new SymbolTable();
		Info info = ts.get_info(id);
		Type t1 = info.getType();
		Type t2 = exp.type_check();
		if (t2 != ERROR && t2 != INT) {
			System.out.println("invalid types in assignment");
			goo.podeContinuar = false;
		}
		return t1;
	}

	public boolean equals(Object obj) {
		return this.toString().equals(obj.toString());
	}

	@Override
	public void gen() {
		SymbolTable ts = new SymbolTable();
		Info info = ts.get_info(id);
		exp.gen();
		Temporarios t = new Temporarios();
		this.addr = "T" + t.getNumeroTemp();
		new Quad("*", exp.addr, Integer.toString(4), "T" + t.getNumeroTemp());
		Temporarios t1 = new Temporarios();
		new Quad("", info.getName(), "[" + this.addr + "]", "T"
				+ t1.getNumeroTemp());
		this.addr = "T" + t1.getNumeroTemp();
	}

}
