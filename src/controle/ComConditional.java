/*
 * Generated by classgen, version 1.3
 * 24/09/10 22:45
 */
package controle;

public class ComConditional extends Com {

	private Com com;
	private Com com2;

	public ComConditional(Com com, Com com2) {
		this.com = com;
		this.com2 = com2;
	}

	public Com getCom() {
		return com;
	}

	public void setCom(Com com) {
		this.com = com;
	}

	public Com getCom2() {
		return com2;
	}

	public void setCom2(Com com2) {
		this.com2 = com2;
	}

	public String toString(String tab) {
		StringBuffer buffer = new StringBuffer();
		buffer.append(tab);
		buffer.append("ComConditional(\n");
		if (com != null)
			buffer.append(com.toString("  " + tab));
		else
			buffer.append(tab + "  null");
		buffer.append("\n");
		if (com2 != null)
			buffer.append(com2.toString("  " + tab));
		else
			buffer.append(tab + "  null");
		buffer.append("\n");
		buffer.append(tab);
		buffer.append(") [ComConditional]");
		return buffer.toString();
	}

	@Override
	public void type_check() {
		if (com != null)
			com.type_check();
		if (com2 != null)
			com2.type_check();
	}

	@Override
	public void gen() {
		if (com != null) {
			com.gen();
			if (com2 == null)
				Quad.use_label(((ComExpDecla) com).getExp().f_label);
		}
		if (com2 != null) {
			new Quad("goto", ((ComExpDecla) com).getDecla().next, "", "");
			Quad.pen = ((ComExpDecla) com).getDecla().next;
			Quad.use_label(((ComExpDecla) com).getExp().f_label);
			if (com.next.equals("FALL"))
				Quad.use_label(((ComExpDecla) com).getDecla().next);
			com2.next = com.next;
			com2.gen();
		}
	}

}
