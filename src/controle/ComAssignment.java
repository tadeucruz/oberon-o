/*
 * Generated by classgen, version 1.3
 * 24/09/10 22:45
 */
package controle;

import principal.goo;
import type.ArrayType;
import type.Type;

public class ComAssignment extends Com {

	private Exp exp;
	private Exp exp2;

	public ComAssignment(Exp exp, Exp exp2) {
		this.exp = exp;
		this.exp2 = exp2;
	}

	public Exp getExp() {
		return exp;
	}

	public void setExp(Exp exp) {
		this.exp = exp;
	}

	public Exp getExp2() {
		return exp2;
	}

	public void setExp2(Exp exp2) {
		this.exp2 = exp2;
	}

	public String toString(String tab) {
		StringBuffer buffer = new StringBuffer();
		buffer.append(tab);
		buffer.append("ComAssignment(\n");
		if (exp != null)
			buffer.append(exp.toString("  " + tab));
		else
			buffer.append(tab + "  null");
		buffer.append("\n");
		if (exp2 != null)
			buffer.append(exp2.toString("  " + tab));
		else
			buffer.append(tab + "  null");
		buffer.append("\n");
		buffer.append(tab);
		buffer.append(") [ComAssignment]");
		return buffer.toString();
	}

	@Override
	public void type_check() {
		Type t1 = exp.type_check();
		Type t2 = exp2.type_check();
		if (t1 instanceof ArrayType) {
			t1 = ((ArrayType) t1).getType();
		}
		if (t2 instanceof ArrayType) {
			t2 = ((ArrayType) t2).getType();
		}
		if (t2 != ERROR && !compatible(t1, t2)) {
			System.out.println("invalid types in assignment");
			goo.podeContinuar = false;
		}
	}

	@Override
	public void gen() {
		exp.gen();
		exp2.gen();
		new Quad("ATRI", exp.addr, exp2.addr, "");
	}

}
