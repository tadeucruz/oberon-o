/*
 * Generated by classgen, version 1.3
 * 24/09/10 22:45
 */
package controle;

import SymbolTable.FunInfo;
import SymbolTable.SymbolTable;

public class DeclaProcHeader extends Decla {

	private int id;
	private Decla decla;
	private Decla decla2;

	public DeclaProcHeader(int id, Decla decla, Decla decla2) {
		this.id = id;
		this.decla = decla;
		this.decla2 = decla2;
	}

	public int getId() {
		return id;
	}

	public void setId(int id) {
		this.id = id;
	}

	public Decla getDecla() {
		return decla;
	}

	public void setDecla(Decla decla) {
		this.decla = decla;
	}

	public Decla getDecla2() {
		return decla2;
	}

	public void setDecla2(Decla decla2) {
		this.decla2 = decla2;
	}

	public String toString(String tab) {
		StringBuffer buffer = new StringBuffer();
		buffer.append(tab);
		buffer.append("DeclaProcHeader(\n");
		buffer.append("  " + tab + id);
		buffer.append("\n");
		if (decla != null)
			buffer.append(decla.toString("  " + tab));
		else
			buffer.append(tab + "  null");
		buffer.append("\n");
		if (decla2 != null)
			buffer.append(decla2.toString("  " + tab));
		else
			buffer.append(tab + "  null");
		buffer.append("\n");
		buffer.append(tab);
		buffer.append(") [DeclaProcHeader]");
		return buffer.toString();
	}

	@Override
	public void type_check() {
		// MUDEI
		if (decla != null)
			decla.type_check();
		if (decla2 != null)
			decla2.type_check();
		SymbolTable ts = new SymbolTable();
		FunInfo pi = (FunInfo) ts.get_info(id);
		if (pi.getTypeOld().equals("INTEGER")) {
			pi.setType(INT);
			ts.edit_info(id, pi);
		} else if (pi.getTypeOld().equals("BOOLEAN")) {
			pi.setType(BOOL);
			ts.edit_info(id, pi);
		} else {
			pi.setType(ERROR);
			ts.edit_info(id, pi);
		}
	}

	@Override
	public void gen() {
		int wd1 = 0, wd2 = 0;
		globalOuLocal = "local";
		new Quad("Proc" + contProc, "(", "FIXME", ")");
		int pos = Quad.QuadPos();
		if (decla != null) {
			decla.gen();
			wd1 = decla.width;
		}
		if (decla2 != null) {
			decla2.gen();
			wd2 = decla2.width;
		}
		new Quad("Proc" + contProc, "(", Integer.toString(wd1 + 4), ")", pos);
		contProc++;
	}

}
